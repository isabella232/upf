define_power_model phyPwrModel for PHY3TX2RX0P8V {

# Since the hard IP is a hard macro, the design attribute UPF_is_hard_macro
# is set on the model. This attribute is automatically imported from the
# Liberty model when a Liberty model is read in for the macro.
set_design_attributes -models PHY3TX2RX0P8V_1024X32 -is_hard_macro TRUE

# To ensure the model is self-contained, a power domain is created for the
# PHY and the objects are set to the power domain
create_power_domain PDPHY -elements {.} \
  -supply {ss_regin} \
  -supply {ss_regout}

# Supply set handle ss_regin has input supply VDDI and ground VSS
# associated to power and ground functions
# VDDI is the primary power and VSS is the primary ground of the PHY
create_supply_set PDPHY.ss_regin -update \
  -function {power  VDDI} \
  -function {ground VSS}

# Supply set handle ss_regout has output supply VREG and ground VSS
# associated to power and ground functions
create_supply_set PDPHY.ss_regout -update \
  -function {power  VREG} \
  -function {ground VSS}

# Supply set ss_regin has only 1 state named HIGH as input voltage
# is fixed at 1.8 V
add_power_state -supply PDPHY.ss_regin \
  -state {HIGH -supply_expr {power == {FULL_ON 1.8}}}

# Supply set ss_regout has two state LOW and REG_OFF
# The state of ss_regout supply is controlled by regCtrl input
# In LOW state, the supply is 0.8 V
# In REG_OFF state, the supply is OFF
add_power_state -supply PDPHY.ss_regout \
  -state {LOW     -logic_expr {regCtrl==1} \
                  -supply_expr {power=={FULL_ON 0.8}}} \
  -state {REG_OFF -logic_expr {regCtrl==0} \
                  -supply_expr {power==OFF}}

# Power domain PDPHY has two states, ON and OFF
# The state of the power domain is a function of the states of the supplies
# In ON state, the ss_regout is in LOW state
# In OFF state, the ss_regout is in REG_OFF state
add_power_state -domain PDPHY \
  -state {ON  -logic_expr \
    {PDPHY.ss_regin==HIGH && PDPHY.ss_regout==LOW}} \
  -state {OFF -logic_expr \
    {PDPHY.ss_regin==HIGH && PDPHY.ss_regout==REG_OFF}} \

# Terminal Boundary Conditions
# Since the power model must be self-contained, the boundary
# conditions are specified for the model. The hard IP is one that has
# already been implemented and so the conditions as seen from outside
# the macro are specified.
set_port_attributes -ports \
  [find_objects . -pattern * -object_type port -direction in] \
  -exclude_ports {regCtrl} -receiver_supply PDPHY.ss_regout

set_port_attributes -ports \
  {regCtrl} -receiver_supply PDPHY.ss_regin

set_port_attributes -ports \
  [find_objects . -pattern * -object_type port -direction out] \
  -driver_supply PDPHY.ss_regout

}
